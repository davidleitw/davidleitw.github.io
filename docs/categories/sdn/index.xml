<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SDN on davidLei</title>
    <link>http://example.org/categories/sdn/</link>
    <description>Recent content in SDN on davidLei</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>davidleitw@gmail.com (davidlei)</managingEditor>
    <webMaster>davidleitw@gmail.com (davidlei)</webMaster>
    <lastBuildDate>Fri, 13 Aug 2021 21:34:43 +0800</lastBuildDate><atom:link href="http://example.org/categories/sdn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SDN 學習筆記(一): SDN 的發展歷史以及基本名詞介紹</title>
      <link>http://example.org/posts/sdn1/</link>
      <pubDate>Fri, 13 Aug 2021 21:34:43 +0800</pubDate>
      <author>davidleitw@gmail.com (davidlei)</author>
      <guid>http://example.org/posts/sdn1/</guid>
      <description>此專案用來整理一些學習 SDN 的相關知識以及參考資料。 由於剛開始學習沒多久，所以會著重於個人學習的順序，希望在寫心得的同時也可以幫助到一些想要研究 SDN 的朋友。
當然，由於我也是剛開始學習，所以整理的心得如果有誤也請各位前輩們指點
預備知識 在學習 SDN 之前我準備先複習了一輪 computer networking a top-down approach 7th，之前大學學過的很多部份已經有點忘記了，所以先把傳統的網路概論複習一輪，之後進入SDN的學習時，才會比較清楚知道為什麼要提出SDN的概念，SDN具體來說是要解決哪些傳統架構無法解決的問題。
之後會陸續整理一點網路的基礎理論心得，讓之後SDN的一些概念比較好解釋。
什麼是 SDN 以及 SDN 的發展歷史  參考文章
 SDN 簡介 SDN 發展趨勢   傳統網路的一些特點:
 每個節點是由設備單獨控制，屬於分散式架構。 控制面以及轉接面放在同一個設備上。 管理員無法直接的操作封包轉送行為，僅能控制設備的通訊協定，再藉由通訊協定的規則去操作設備。 通訊協定對於設備的影響是固定的，無法控制非自己協定內的規則。  SDN 想要採取集中式控制，要求轉接面跟控制面分離，實際上由遠端的 controller 計算以及分送每一個路由器的轉送表，管理員可以直接操作設備轉接封包的行為。
SDN 並非一種技術，而是一種設計的理念，只要符合控制面以及轉接面的分離，以及開放的可程式化設計界面，就可以稱為 SDN 架構。通常 SDN 也伴隨著集中控制的特性，藉由在 controller 獲得的網路全局資料(並非傳統只能獲得局部資料)，根據其業務邏輯進行調整及優化。
常用名詞解釋 Network Device 網路設備 網路設備不僅限於實體的設備(例如 switch ,路由器等等)，也有可能是虛擬的 switch (例如 OVS)，封包在網路設備之前被處理以及轉送。網路設備藉由 Southbound Interface 接收 controller 發過來的指令配置轉送的規則，也可以透過 Southbound Interface 來將一些資料回傳給 controller。</description>
    </item>
    
    <item>
      <title>SDN 學習筆記(二): OpenFlow 1.0 介紹</title>
      <link>http://example.org/posts/sdn2/</link>
      <pubDate>Fri, 13 Aug 2021 21:34:43 +0800</pubDate>
      <author>davidleitw@gmail.com (davidlei)</author>
      <guid>http://example.org/posts/sdn2/</guid>
      <description>前言 想要深入了解一個協定的內容，看規格書是最快的，因為剛開始學習 SDN 相關的知識，所以目前正在讀OpenFlow1.0相關的內容，這篇文章會先主要介紹OpenFlow 1.0的架構，以及一些 spec 的整理.
之後也會整理一些 OpenFlow 1.3版本的內容，並且簡單描述跟 OpenFlow 1.0的差異。
為什麼會著重在1.0與1.3兩個版本呢？  1.0版本與之後的版本不兼容，所以1.0要最先介紹。 1.0以及1.3版本被選為長期支持的穩定版本 1.3為目前的主流版本，多數支持OpenFlow的硬體是支援OpenFlow1.3
參考資料: OpenFlow 協定演進
 OpenFlow 1.0 架構 OpenFlow 1.0 spec 架構圖
 Flow Table 在 OpenFlow Switch 中存放轉發規則的表稱之為 Flow Table
 OpenFlow 1.0 中每個Switch只能存放一個Flow Table
 Flow Table中每個項目被稱為 Flow Entry 在 OpenFlow 1.0 中，每個 Flow Entry 中都包含三個部份
 Header Fields Counters Actions  Header Fields OpenFlow 1.0 協定中共有12種可供匹配的條件， IP部份只支援IPv4。
分別如下，僅列出條列，細節說明請參考 OpenFlow 1.0 spec</description>
    </item>
    
  </channel>
</rss>
